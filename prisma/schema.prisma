// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

/**
 * 1. 회원가입(일반)
 * - 이름
 * - 닉네임
 * - 이메일
 * - 비밀번호
 * - 비밀번호 확인
 * - 주소(우편번호, 기본주소, 상세주소)
 * - 프로필 이미지
 * 1-1. 회원가입(소셜)
 * - 소셜 로그인(카카오, 구글, 네이버)
 * - 소셜 로그인 시 이메일, 닉네임, 프로필, 이름 가져오기
 * - 소셜 로그인 시 이메일, 닉네임, 프로필, 이름 수정 가능
 */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 일반 사용자
model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String? // 소셜 로그인 시 비밀번호 없음
  name         String
  nickname     String   @unique
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // 일반 사용자와 소셜 사용자는 1:1 관계
  account Account[]
  address Address[]
}

// 소셜 사용자
model Account {
  id                String   @id @default(cuid())
  type              String
  provider          String // 카카오, 구글, 네이버
  providerAccountId String // 제공자별 고유 ID
  refreshToken      String?
  accessToken       String?
  expiresAt         Int? // token 만료 시간
  tokenType         String? // oauth token 유형: bearer
  scope             String? // 사용자 정보 접근 권한
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // 소셜 사용자와 일반 사용자는 1:1 관계
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@unique([provider, providerAccountId])
}

// 주소
model Address {
  id            String @id @default(cuid())
  zondCode      String
  address       String
  detailAddress String

  // 주소와 사용자는 1:N 관계
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}
